name: CI/CD Workflow for a full stack application
on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.29.0'
      id: Install


    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3 

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-west-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    

    - name: Build and push Backend Docker image
      run: |
        cd api 
        docker build \
          --build-arg AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
          --build-arg AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \
          --build-arg AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest 
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

    - name: Build and push Frontend Docker image
      run: |
        cd front-end-nextjs
        docker build \
          --build-arg REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }} \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest 
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest


    - name: Deploy the Kubernetes Engine
      run: |
        cd terraform-eks
        terraform init
        terraform plan -var-file=terraform.tfvars
        terrfaorm apply -auto-approve

    - name: Access Cluster
      run: aws eks update-kubeconfig --location <region> --name <name of cluster>



