name: CI/CD Workflow for a full stack application
#on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Destroy the Kubernetes Cluster'
        required: false
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
      REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.29.0'
      id: Install


    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3 

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-west-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    

    - name: Build and push Backend Docker image
      run: |
        cd api 
        docker build \
          --build-arg AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
          --build-arg AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \
          --build-arg AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }} \
          .

        docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}

    - name: Build and push Frontend Docker image
      run: |
        cd front-end-nextjs
        docker build \
          --build-arg REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }} \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }} \
          .

        docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}


    - name: Deploy the Kubernetes Engine
      run: |
        cd terraform-eks
        terraform init
        terraform plan -var-file=terraform.tfvars -out=tfplan  # using the -out flag to save the execution plan to a file
        terraform apply -auto-approve tfplan

    - name: Access Cluster
      run: aws eks update-kubeconfig --region eu-west-1 --name fullStackAppCluster

    - name: Install Grafana into the cluster
      run: |
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update
        helm install grafana grafana/grafana --namespace grafana --set persistence.enabled=true --set adminUser=admin --set adminPassword=admin256  

    - name: Install Flux 


  destroy:
    runs-on: ubuntu-latest
    needs: deploy      # This ensures the destroy job runs after the deploy job

    if: ${{ github.event_name == 'workflow_dispatch' && github.event_name == 'push' && github.ref == 'refs/heads/master' }} # Adjust condition as needed
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3 
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
      - name: Destroy Kubernetes Cluster
        run: |
          cd terraform-eks
          terraform init
          terraform destroy -var-file=terraform.tfvars -auto-approve      

